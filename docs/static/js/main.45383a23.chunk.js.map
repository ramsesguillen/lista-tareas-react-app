{"version":3,"sources":["components/hooks/useForm.js","components/Form.js","components/Header.js","components/ListItem.js","components/TareaList.js","App.js","index.js"],"names":["useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","Form","setTareas","tarea","action","className","onSubmit","e","preventDefault","length","tareas","id","Date","getTime","texto","completada","type","placeholder","onChange","autoComplete","icon","faPlusSquare","Header","mostrarCompletadas","setMostrarCompletadas","onClick","faEyeSlash","faEye","ListItem","editandoTarea","setEditandoTarea","faCheckSquare","faSquare","map","tr","faEdit","faTimes","filter","TareaList","App","tareasLocalStorage","JSON","parse","localStorage","getItem","useEffect","setItem","stringify","mostrarCompletadasLocalStorage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.45383a23.chunk.js","sourcesContent":["import { useState } from 'react'\r\n\r\nexport const useForm = ( initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ( ) => {\r\n        setValues(initialState);\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        })\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n}","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons'\r\nimport { useForm } from './hooks/useForm'\r\n\r\nexport const Form = ({ setTareas }) => {\r\n\r\n    const [values, handleInputChange, reset ] = useForm({ tarea: ''})\r\n\r\n    const { tarea } = values;\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if ( tarea.length > 2 ) {\r\n            setTareas( tareas => [\r\n                ...tareas,\r\n                {\r\n                    id: new Date().getTime(),\r\n                    texto: tarea,\r\n                    completada: false\r\n                }\r\n            ]);\r\n\r\n            reset();\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form\r\n            action=''\r\n            className=\"formulario-tareas\"\r\n            onSubmit={ handleSubmit }\r\n        >\r\n            <input\r\n                type=\"text\"\r\n                name=\"tarea\"\r\n                className=\"formulario-tareas__input\"\r\n                placeholder=\"Escribe una Tarea...\"\r\n                value={ tarea }\r\n                onChange={ handleInputChange }\r\n                autoComplete=\"off\"\r\n            />\r\n            <button\r\n                type=\"submit\"\r\n                className=\"formulario-tareas__btn\"\r\n            >\r\n                <FontAwesomeIcon icon={ faPlusSquare } className=\"formulario-tareas__icono-btn\"/>\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport const Header = ({mostrarCompletadas,  setMostrarCompletadas}) => {\r\n    return (\r\n        <header className=\"header\">\r\n            <h1 className=\"header__titulo\">Lista de Tareas</h1>\r\n                <button\r\n                    className=\"header__boton\"\r\n                    onClick={() => setMostrarCompletadas( !mostrarCompletadas ) }\r\n                >\r\n                    {\r\n                        ( mostrarCompletadas )\r\n                            ?\r\n                            <>\r\n                                No mostrar completadas\r\n                                <FontAwesomeIcon icon={ faEyeSlash } className=\"header__icono-boton\"/>\r\n                            </>\r\n                            :\r\n                            <>\r\n                                Nostrar completadas\r\n                                <FontAwesomeIcon icon={ faEye } className=\"header__icono-boton\"/>\r\n                            </>\r\n                    }\r\n                </button>\r\n        </header>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCheckSquare, faEdit, faTimes, faSquare } from '@fortawesome/free-solid-svg-icons'\r\nimport { useForm } from './hooks/useForm'\r\n\r\nexport const ListItem = ({ tarea: { id, texto, completada }, setTareas }) => {\r\n\r\n    const [editandoTarea, setEditandoTarea] = useState( false )\r\n\r\n    const [values, handleInputChange] = useForm({ tarea: texto })\r\n\r\n    const { tarea } = values;\r\n\r\n    const handleEditarTarea = e => {\r\n        e.preventDefault();\r\n        setEditandoTarea( false );\r\n        setTareas( tareas => tareas.map( tr => {\r\n                if ( tr.id === id ){\r\n                    tr.texto = tarea;\r\n                }\r\n                return tr;\r\n            })\r\n        );\r\n    }\r\n\r\n    const toggleCompletada = () => {\r\n        setTareas( tareas => tareas.map( tr => {\r\n                if ( tr.id === id ){\r\n                    tr.completada = !completada;\r\n                }\r\n                return tr;\r\n            })\r\n        );\r\n    }\r\n\r\n    const handleDeleteTarea = () => {\r\n        setTareas( tareas => tareas.filter( tr => tr.id !== id ));\r\n    }\r\n\r\n\r\n    return (\r\n        <li className=\"lista-tareas__tarea\">\r\n            <FontAwesomeIcon\r\n                icon={ (completada) ? faCheckSquare : faSquare }\r\n                className=\"lista-tareas__icono lista-tareas__icono-check\"\r\n                onClick={ toggleCompletada }\r\n            />\r\n            <div className=\"lista_tareas__texto\">\r\n                {\r\n                    ( editandoTarea )\r\n                        ?\r\n                            <form\r\n                                className=\"formulario-editar-tarea\"\r\n                                onSubmit={ handleEditarTarea }\r\n                            >\r\n                                <input\r\n                                    name=\"tarea\"\r\n                                    type=\"text\"\r\n                                    className=\"formulario-editar-tarea__input\"\r\n                                    value={ tarea }\r\n                                    onChange={ handleInputChange }\r\n                                />\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"formulario-editar-tarea__btn\"\r\n                                >\r\n                                    Actulizar\r\n                                </button>\r\n                            </form>\r\n                        :\r\n                        ( texto )\r\n                }\r\n            </div>\r\n            <div className=\"lista-tareas__contenedor-botones\">\r\n                <FontAwesomeIcon\r\n                    icon={ faEdit }\r\n                    className=\"lista-tareas__icono lista-tareas__icono-accion\"\r\n                    onClick={ () => setEditandoTarea( !editandoTarea )}\r\n                />\r\n                <FontAwesomeIcon\r\n                    icon={ faTimes }\r\n                    className=\"lista-tareas__icono lista-tareas__icono-accion\"\r\n                    onClick={ handleDeleteTarea }\r\n                />\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { ListItem } from './ListItem'\r\n\r\nexport const TareaList = ( { tareas, setTareas, mostrarCompletadas }) => {\r\n    return (\r\n        <ul className=\"lista-tareas\">\r\n            {\r\n                ( tareas.length > 0 )\r\n                    ?\r\n                        tareas.map( tarea  => (\r\n                            ( mostrarCompletadas )\r\n                                ?\r\n                                    <ListItem\r\n                                        key={ tarea.id }\r\n                                        tarea={ tarea }\r\n                                        setTareas={ setTareas }\r\n                                    />\r\n                                :\r\n                                ( !tarea.completada )\r\n                                    &&\r\n                                        <ListItem\r\n                                            key={ tarea.id }\r\n                                            tarea={ tarea }\r\n                                            setTareas={ setTareas }\r\n                                        />\r\n                        ))\r\n                    :\r\n                        <div className=\"lista-tareas__mensaje\">\r\n                            ~ No hay tareas agregadas ~\r\n                        </div>\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport './App.css'\r\nimport { Form } from './components/Form'\r\nimport { Header } from './components/Header'\r\nimport { TareaList } from './components/TareaList'\r\n\r\nexport const App = () => {\r\n\r\n    const tareasLocalStorage = JSON.parse( localStorage.getItem('tareas')) || [];\r\n\r\n    const [tareas, setTareas] = useState(  tareasLocalStorage  );\r\n\r\n    useEffect( () => {\r\n        localStorage.setItem('tareas', JSON.stringify( tareas ) );\r\n    }, [ tareas ]);\r\n\r\n\r\n    const mostrarCompletadasLocalStorage = JSON.parse( localStorage.getItem('mostrarCompletadas')) || true ;\r\n\r\n    const [mostrarCompletadas, setMostrarCompletadas] = useState( mostrarCompletadasLocalStorage )\r\n\r\n    useEffect( () => {\r\n        localStorage.setItem('mostrarCompletadas', JSON.stringify( mostrarCompletadas ) );\r\n    }, [ mostrarCompletadas ]);\r\n\r\n\r\n    return (\r\n        <div className=\"contenedor\">\r\n            <Header\r\n                mostrarCompletadas={ mostrarCompletadas }\r\n                setMostrarCompletadas={ setMostrarCompletadas }\r\n            />\r\n            <Form setTareas={ setTareas } />\r\n            <TareaList\r\n                tareas={ tareas }\r\n                setTareas={ setTareas }\r\n                mostrarCompletadas={ mostrarCompletadas }\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport './index.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}